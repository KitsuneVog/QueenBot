import discord
from discord.ext import commands
from discord_slash import SlashCommand, SlashContext
from discord_slash.utils.manage_commands import create_choice, create_option
from tocen import *
import json
import asyncio
#from discord_components import  DiscordComponents, Button, ButtonStyle

import functions

intents = discord.Intents.all()
intents.members = True

bot = commands.Bot(command_prefix='%', intents=intents)
slash = SlashCommand(bot, sync_commands=True)

bot.remove_command('help')

# –≤–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞
@bot.event
async def on_ready():
    #DiscordComponents(bot)
    await bot.change_presence(status=discord.Status.online, activity=discord.Game('/help'))

    print(f'{bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')

# –±–æ—Ç–∞ –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É
@bot.event
async def on_guild_join(guild):
    await functions.guild_join(bot, guild)

# –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
@bot.event
async def on_guild_update(before, after):
    if before.name != after.name:
        await functions.guild_update(before, after)

# –±–æ—Ç–∞ –æ—Ç–∫–ª—é—á–∏–ª–∏ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
@bot.event
async def on_guild_remove(guild):
    await functions.guild_remove(bot, guild)

# –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.event
async def on_message(message):
    if message.author.bot:
        return

    global guild
    guild = message.guild

    await functions.message_lvl(bot, guild, message)

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏
@bot.event
async def on_raw_reaction_add(payload):
    if payload.member.bot:
        return

    member = payload.member
    reaction = payload.emoji
    channel = bot.get_channel(payload.channel_id)
    message = await channel.fetch_message(payload.message_id)

    with open(f'server data/{message.guild.id}-{message.guild.name}.json', 'r') as f:
        config = json.load(f)

# –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—Å—è
    if channel.id in config['config']['rules']['channels']:
        await functions.register(message, payload)

# —Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ä—è–∫—Ü–∏—é

    if channel.id in config['config']['photo']['channels']:
        await functions.one_reaction_photo(member, reaction, message)

    elif channel.id in config['config']['news']['channels']:
        await functions.one_reaction_survey(member, reaction, message)

# –Ω–∞–≤—ã–∫–∏
    elif channel.id in config['config']['skills']['channels'] and config['config']['skills']['status'] == 'on':
        await message.remove_reaction(payload.emoji, member)

        roles = ['üñ•–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', 'üéÆ–≥–µ–π–º–µ—Ä', 'üéµ–º—É–∑—ã–∫–∞–Ω—Ç', 'üñå—Ö—É–¥–æ–∂–Ω–∏–∫']
        await functions.issuing_roles('skills', reaction, member, roles)

# –∏–≥—Ä—ã
    elif channel.id in config['config']['games']['channels'] and config['config']['games']['status'] == 'on':
        await message.remove_reaction(payload.emoji, member)

        roles = ['Minecraft', 'Counter-Strike', 'Genshin Impact', 'OSU!', 'Grand Theft Auto', 'Fortnite', 'PUBG', 'World of Tanks']
        await functions.issuing_roles('games', reaction, member, roles)

# —Ü–≤–µ—Ç–∞
    elif channel.id in config['config']['colors']['channels'] and config['config']['colors']['status'] == 'on':
        await message.remove_reaction(payload.emoji, member)

        await functions.colour(member, reaction, message)

# —Ä–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏–∏
    elif str(channel.id) in config['config']['data']['roles']:
        if str(message.id) in config['config']['data']['roles'][channel_id]:
            pass

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
@bot.event
async def on_member_join(member):
    await functions.member_join(bot, member)
    await functions.member_number()

@bot.event
async def on_member_remove(member):
    await functions.member_remove(member)


@bot.event
async def on_member_update(before, after):
    if before.roles != after.roles:

        list = ['üñ•–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', 'üñå—Ö—É–¥–æ–∂–Ω–∏–∫', 'üéµ–º—É–∑—ã–∫–∞–Ω—Ç', 'üéÆ–≥–µ–π–º–µ—Ä']
        await functions.member_update(before, after, list, '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä–ù–∞–≤—ã–∫–∏')

        list = ['Minecraft', 'Counter-Strike', 'Genshin Impact', 'Overwatch','OSU!', 'Grand Theft Auto', 'Apex Legends', 'Fortnite', 'PUBG', 'Destiny 2', 'World of Tanks', 'Call of Duty: Modern Warfare']
        await functions.member_update(before, after, list, '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä–ò–≥—Ä—ã')

# –∫–æ–º–∞–Ω–¥–∞ help
@slash.slash(
    name='help',
    description='—ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º',
    options=[
        create_option(
            name='command',
            description='–∫–æ–º–∞–Ω–¥–∞',
            required=False,
            option_type=3,
            choices=[
                create_choice(
                    name='help',
                    value='help'
                ),
                create_choice(
                    name='lvl',
                    value='lvl'
                ),
                create_choice(
                    name='info',
                    value='info'
                ),
                create_choice(
                    name='deletion',
                    value='deletion'
                ),
                create_choice(
                    name='clear',
                    value='clear'
                ),
                create_choice(
                    name='delete',
                    value='delete'
                ),
                create_choice(
                    name='settings',
                    value='add'
                ),
                create_choice(
                    name='lever',
                    value='lever'
                )
            ]

        )
    ]
)
async def help(ctx, command=None):
    if command == None:
        await functions.help(ctx)

    elif command == 'help':
        await functions.help_info(ctx)

    elif command == 'lvl':
        await functions.lvl_info(ctx)

    elif command == 'info':
        await functions.info_info(ctx)

    elif command == 'clear':
        await functions.clear_info(ctx)

    elif command == 'deletion':
        await functions.deletion_info(ctx)

    elif command == 'delete':
        await functions.delete_info(ctx)

    elif command == 'settings':
        await functions.add_info(ctx)

    elif command == 'lever':
        await functions.lever_info(ctx)


# –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
@slash.slash(
    name='lvl',
    description='–≤–∞—à —É—Ä–æ–≤–µ–Ω—å',
)
async def lvl(ctx):
    guild = ctx.channel.guild
    author = ctx.author
    with open(f'server data/{guild.id}-{guild.name}.json', 'r') as f:
        config = json.load(f)

    if config['config']['levels']['status'] == 'on':
        emb = discord.Embed(title=f'**{guild}**', colour=10181046)
        emb.set_thumbnail(url=guild.icon_url)
        exp = round(config[f'{author.id}']['exp'], 1)
        rank = config[f'{author.id}']['rank']
        lvl = config[f'{author.id}']['lvl']
        warn = config[f'{author.id}']['warn']
        emb.add_field(name=f'lvl = {lvl}', value='–ø–æ–≤—ã—à–∞–µ—Ç—å—Å—è –∫–æ–≥–¥–∞ exp = lvl', inline=False)
        emb.add_field(name=f'exp = {exp}', value='–ø–æ–≤—ã—à–∞–µ—Ç—å—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è', inline=False)
        emb.add_field(name=f'rank = {rank}', value='–∫–æ–≥–¥–∞ lvl = 10', inline=False)
        emb.add_field(name=f'warn = {warn}', value='–≤–∞—à–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è', inline=False)

    else:
        emb = discord.Embed(title='', colour=10181046)
        emb.add_field(name='**–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç**',
                      value='—Ñ—É–Ω–∫—Ü–∏—è **lvl** –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ', inline=False)

    await ctx.send(embed=emb, hidden=True)

# –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
@slash.slash(
    name='info',
    description='—É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
    options=[
        create_option(
            name='member',
            description='–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            required=True,
            option_type=6
        )
    ]
)
@commands.has_permissions(view_audit_log=True)
async def info(ctx, member: discord.Member):
    with open(f'server data/{member.guild.id}-{member.guild.name}.json', 'r') as f:
        config = json.load(f)

    member = member.id
    exp = round(config[f'{member}']['exp'], 1)
    rank = config[f'{member}']['rank']
    lvl = config[f'{member}']['lvl']
    warn = config[f'{member}']['warn']

    emb = discord.Embed(title=f'**–ü—Ä–æ—Ñ–∏–ª—å {member}**', colour=10181046)
    emb.add_field(name=f'lvl = {lvl}', value=f'exp = {exp}', inline=False)
    emb.add_field(name=f'rank = {rank}', value=f'warn = {warn}', inline=False)

    await ctx.message.author.send(embed=emb, hidden=True)

# –æ–±–Ω—É–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@slash.slash(
    name='deletion',
    description='–æ–±–Ω—É–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    options=[
        create_option(
            name='member',
            description='–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            required=True,
            option_type=6
        )
    ]
)
@commands.has_permissions(administrator=True)
async def deletion(ctx, member: discord.Member):
    await ctx.channel.purge(limit=1)

    with open(f'server data/{member.guild.id}-{member.guild.name}.json', 'r') as f:
        config = json.load(f)

    if config['config']['levels']['status'] == 'on':
        config[f'{member.id}']['lvl'] = 0
        config[f'{member.id}']['exp'] = 0
        config[f'{member.id}']['rank'] = 0

        for n in range(1, 11):
            role = discord.utils.get(member.guild.roles, name=f'–£—Ä–æ–≤–µ–Ω—å {n}')

            if role in member.roles:
                await member.remove_roles(role)
    else:
        emb = discord.Embed(title='', colour=10181046)
        emb.add_field(name='**–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç**',
                      value='—Ñ—É–Ω–∫—Ü–∏—è **deletion** –æ—Ç–∫–ª—é—á–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ', inline=False)

    with open(f'server data/{member.guild.id}-{member.guild.name}.json', 'w') as f:
        json.dump(config, f, indent=4, ensure_ascii=False)
    try:
        emb = discord.Embed(title=f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ–±–Ω—É–ª—ë–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild}', colour=10181046)
        emb.set_thumbnail(url=guild.icon_url)

        await member.send(embed=emb)
    except discord.errors.Forbidden:
        pass

@slash.slash(
    name='clear',
    description='–æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞',
    options=[
        create_option(
            name='number',
            description='—á–∏—Å–ª–æ',
            required=True,
            option_type=10
        )
    ]
)
@commands.has_permissions(view_audit_log=True)
async def clear(ctx, number):
    await ctx.channel.purge(limit=int(number))

    emb = discord.Embed(title=f'–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–∏–Ω–∞ \n–£–¥–∞–ª–µ–Ω–æ {int(number)} —Å–ª–æ–≤', colour=10181046)
    await ctx.send(embed=emb, hidden=True)

@slash.slash(
    name='add',
    description='–¥–æ–±–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª',
    options=[
        create_option(
            name='function',
            description='—Ñ—É–Ω–∫—Ü–∏—è',
            required=True,
            option_type=3,
            choices=[
                create_choice(
                    name='–ù–∞–≤—ã–∫–∏',
                    value='skills'
                ),
                create_choice(
                    name='–¶–≤–µ—Ç–∞',
                    value='colors'
                ),
                create_choice(
                    name='–ò–≥—Ä—ã',
                    value='games'
                ),
                create_choice(
                    name='–ü—Ä–∞–≤–∏–ª–∞',
                    value='rules'
                ),
                create_choice(
                    name='–ù–æ–≤–æ—Å—Ç–∏',
                    value='news'
                ),
                create_choice(
                    name='–§–æ—Ç–æ',
                    value='photo'
                ),
                create_choice(
                    name='–°–ø–∞–º',
                    value='levels'
                ),
                create_choice(
                    name='–ü—Ä–∏–≤–µ—Å—Ç–≤–∏–µ',
                    value='passage'
                ),
                create_choice(
                    name='–ü—Ä–æ–≤–µ—Ä–∫–∞',
                    value='check'
                )
            ]
        )
    ]
)
@commands.has_permissions(administrator=True)
async def add(ctx, function):
    guild = ctx.guild
    with open(f'server data/{guild.id}-{guild.name}.json', 'r') as f:
        config = json.load(f)

    config['config'][function]['channels'].append(ctx.channel.id)
    config['config'][function]['channels'] = list(set(config['config'][function]['channels']))
    config['config'][function]['status'] = 'on'

    with open(f'server data/{guild.id}-{guild.name}.json', 'w') as f:
        json.dump(config, f, indent=4, ensure_ascii=False)

    emb = discord.Embed(title=f'{function.upper()}', colour=10181046)

    if function != 'skills' and function != 'colors' and function != 'games' and function != 'rules':
        emb = discord.Embed(
            title=f'–¢–µ–ø–µ—Ä—å –≤ –∫–∞–Ω–∞–ª -__{ctx.channel.name}__- –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è {function}\n–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤–∫–ª—é—á–µ–Ω–∞**',
            colour=10181046)
        await ctx.send(embed=emb, hidden=True)

    elif function == 'skills':
        role1 = discord.utils.get(guild.roles, name='üñ•–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç')
        role2 = discord.utils.get(guild.roles, name='üéÆ–≥–µ–π–º–µ—Ä')
        role3 = discord.utils.get(guild.roles, name='üéµ–º—É–∑—ã–∫–∞–Ω—Ç')
        role4 = discord.utils.get(guild.roles, name='üñå—Ö—É–¥–æ–∂–Ω–∏–∫')

        emb.add_field(name='–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏',
                        value=f'1) {role1.mention}\n2) {role2.mention}\n3) {role3.mention}\n4) {role4.mention}\n___–Ω–∞–∂–º–∏ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –ø–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º___',
                        inline=False)
        message = await ctx.channel.send(embed=emb)
        emb = discord.Embed(
            title=f'–¢–µ–ø–µ—Ä—å –≤ –∫–∞–Ω–∞–ª -__{ctx.channel.name}__- –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è {function}\n–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤–∫–ª—é—á–µ–Ω–∞**',
            colour=10181046)
        await ctx.send(embed=emb, hidden=True)

        list_emoji = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£']
        for emoji in list_emoji:
                await message.add_reaction(emoji=emoji)

    elif function == 'colors':
        role1 = discord.utils.get(guild.roles, name='–ß—ë—Ä–Ω—ã–π')
        role2 = discord.utils.get(guild.roles, name='–ë–µ–ª—ã–π')
        role3 = discord.utils.get(guild.roles, name='–ñ—ë–ª—Ç—ã–π')
        role4 = discord.utils.get(guild.roles, name='–û—Ä–∞–Ω–∂–µ–≤—ã–π')
        role5 = discord.utils.get(guild.roles, name='–ì–æ–ª—É–±–æ–π')
        role6 = discord.utils.get(guild.roles, name='–Ø—Ä–∫–æ —Ä–æ–∑–æ–≤—ã–π')
        role7 = discord.utils.get(guild.roles, name='–§–∏–æ–ª–µ—Ç–æ–≤—ã–π')

        emb.add_field(name='–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç —Å–≤–æ–µ–≥–æ –Ω–∏–∫–∞',
                        value=f'1) {role1.mention}\n2) {role2.mention}\n3) {role3.mention}\n4) {role4.mention}\n5) {role5.mention}\n6) {role6.mention}\n7) {role7.mention}\n___–Ω–∞–∂–º–∏ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –ø–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º___',
                        inline=False)
        message = await ctx.channel.send(embed=emb)
        emb = discord.Embed(
            title=f'–¢–µ–ø–µ—Ä—å –≤ –∫–∞–Ω–∞–ª -__{ctx.channel.name}__- –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è {function}\n–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤–∫–ª—é—á–µ–Ω–∞**',
            colour=10181046)
        await ctx.send(embed=emb, hidden=True)

        list_emoji = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£']
        for emoji in list_emoji:
            await message.add_reaction(emoji=emoji)

    elif function == 'games':
        role1 = discord.utils.get(guild.roles, name='Minecraft')
        role2 = discord.utils.get(guild.roles, name='Counter-Strike')
        role3 = discord.utils.get(guild.roles, name='Genshin Impact')
        role4 = discord.utils.get(guild.roles, name='OSU!')
        role5 = discord.utils.get(guild.roles, name='Grand Theft Auto')
        role6 = discord.utils.get(guild.roles, name='Fortnite')
        role7 = discord.utils.get(guild.roles, name='PUBG')
        role8 = discord.utils.get(guild.roles, name='World of Tanks')

        emb.add_field(name='–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—ã –≤ –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞–µ—Ç–µ',
                        value=f'1) {role1.mention}\n2) {role2.mention}\n3) {role3.mention}\n4) {role4.mention}\n5) {role5.mention}\n6) {role6.mention}\n7) {role7.mention}\n8) {role8.mention}\n___–Ω–∞–∂–º–∏ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –ø–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º___',
                        inline=False)
        message = await ctx.channel.send(embed=emb)
        emb = discord.Embed(
            title=f'–¢–µ–ø–µ—Ä—å –≤ –∫–∞–Ω–∞–ª -__{ctx.channel.name}__- –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è {function}\n–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤–∫–ª—é—á–µ–Ω–∞**',
            colour=10181046)
        await ctx.send(embed=emb, hidden=True)

        list_emoji = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£']
        for emoji in list_emoji:
            await message.add_reaction(emoji=emoji)

    elif function == 'rules':
        async for message in ctx.channel.history(limit=1, oldest_first=False):
            await message.add_reaction(emoji='‚úÖ')

            emb = discord.Embed(
                title=f'–¢–µ–ø–µ—Ä—å –≤ –∫–∞–Ω–∞–ª -__{ctx.channel.name}__- –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è {function}\n–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤–∫–ª—é—á–µ–Ω–∞**',
                colour=10181046)
            await ctx.send(embed=emb, hidden=True)

    with open(f'server data/{guild.id}-{guild.name}.json', 'w') as f:
        json.dump(config, f, indent=4, ensure_ascii=False)

@slash.slash(
    name='delete',
    description='—É–¥–∞–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –∫–∞–Ω–∞–ª–∞',
    options=[
        create_option(
            name='function',
            description='—Ñ—É–Ω–∫—Ü–∏—è',
            required=True,
            option_type=3,
            choices=[
                create_choice(
                    name='–ù–∞–≤—ã–∫–∏',
                    value='skills'
                ),
                create_choice(
                    name='–¶–≤–µ—Ç–∞',
                    value='colors'
                ),
                create_choice(
                    name='–ò–≥—Ä—ã',
                    value='games'
                ),
                create_choice(
                    name='–ü—Ä–∞–≤–∏–ª–∞',
                    value='rules'
                ),
                create_choice(
                    name='–ù–æ–≤–æ—Å—Ç–∏',
                    value='news'
                ),
                create_choice(
                    name='–§–æ—Ç–æ',
                    value='photo'
                ),
                create_choice(
                    name='–°–ø–∞–º',
                    value='levels'
                ),
                create_choice(
                    name='–ü—Ä–∏–≤–µ—Å—Ç–≤–∏–µ',
                    value='passage'
                ),
                create_choice(
                    name='–ü—Ä–æ–≤–µ—Ä–∫–∞',
                    value='check'
                )
            ]
        )
    ]
)
@commands.has_permissions(administrator=True)
async def delete(ctx, function):
    guild = ctx.guild
    with open(f'server data/{guild.id}-{guild.name}.json', 'r') as f:
        config = json.load(f)

    config['config'][function]['channels'].remove(ctx.channel.id)
    config['config'][function]['channels'] = list(set(config['config'][function]['channels']))

    with open(f'server data/{guild.id}-{guild.name}.json', 'w') as f:
        json.dump(config, f, indent=4, ensure_ascii=False)

    emb = discord.Embed(title=f'–¢–µ–ø–µ—Ä—å –∫–∞–Ω–∞–ª -__{ctx.channel.name}__- —É–¥–∞–ª—ë–Ω –∏–∑ {function}\n–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤—ã–∫–ª—é—á–µ–Ω–∞**', colour=10181046)
    await ctx.send(embed=emb, hidden=True)

@slash.slash(
    name='lever',
    description='–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
    options=[
        create_option(
            name='function',
            description='—Ñ—É–Ω–∫—Ü–∏—è',
            required=True,
            option_type=3,
            choices=[
                create_choice(
                    name='–ù–∞–≤—ã–∫–∏',
                    value='skills'
                ),
                create_choice(
                    name='–¶–≤–µ—Ç–∞',
                    value='colors'
                ),
                create_choice(
                    name='–ò–≥—Ä—ã',
                    value='games'
                ),
                create_choice(
                    name='–ü—Ä–∞–≤–∏–ª–∞',
                    value='rules'
                ),
                create_choice(
                    name='–ù–æ–≤–æ—Å—Ç–∏',
                    value='news'
                ),
                create_choice(
                    name='–§–æ—Ç–æ',
                    value='photo'
                ),
                create_choice(
                    name='–°–ø–∞–º',
                    value='levels'
                ),
                create_choice(
                    name='–ü—Ä–∏–≤–µ—Å—Ç–≤–∏–µ',
                    value='passage'
                ),
                create_choice(
                    name='–ü—Ä–æ–≤–µ—Ä–∫–∞',
                    value='check'
                )
            ]
        ),
        create_option(
            name='status',
            description='—Å—Ç–∞—Ç—É—Å',
            required=True,
            option_type=3,
            choices=[
                create_choice(
                    name='–í–∫–ª—é—á–∏—Ç—å',
                    value='on'
                ),
                create_choice(
                    name='–í—ã–∫–ª—é—á–∏—Ç—å',
                    value='off'
                )
            ]
        )
    ]
)
@commands.has_permissions(administrator=True)
async def lever(ctx, function, status):
    guild = ctx.guild
    with open(f'server data/{guild.id}-{guild.name}.json', 'r') as f:
        config = json.load(f)

        config['config'][function]['status'] = status

    with open(f'server data/{guild.id}-{guild.name}.json', 'w') as f:
        json.dump(config, f, indent=4, ensure_ascii=False)

    emb = discord.Embed(
        title=f'–§—É–Ω–∫—Ü–∏—è __{function}__ **–≤—ã–∫–ª—é—á–µ–Ω–∞**',
        colour=10181046)
    await ctx.send(embed=emb, hidden=True)

@slash.slash(
    name='role',
    description='–¥–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –∫ —Ä–µ–∞–∫—Ü–∏–∏',
    options=[
        create_option(
            name='role',
            description='—Ä–æ–ª—å',
            required=True,
            option_type=8
        ),
        create_option(
            name='emoji',
            description='—Ä–µ–∞–∫—Ü–∏—è-—ç–º–æ–¥–∑–∏',
            required=True,
            option_type=3,
        ),
        create_option(
            name='one_reaction',
            description='–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ–¥–Ω—É —Ä–µ–∞–∫—Ü–∏—é?',
            required=True,
            option_type=3,
            choices=[
                create_choice(
                    name='–û–¥–Ω–∞',
                    value='one'
                ),
                create_choice(
                    name='–ú–Ω–æ–≥–æ',
                    value='many'
                )
            ]
        ),
        create_option(
            name='lever',
            description='–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å?',
            required=True,
            option_type=3,
            choices=[
                create_choice(
                    name='–î–∞',
                    value='Yes'
                ),
                create_choice(
                    name='–ù–µ—Ç',
                    value='No'
                )
            ]
        )
    ]
)
@commands.has_permissions(administrator=True)
async def role(ctx, role, emoji, one_reaction, lever):
    with open(f'server data/{ctx.guild.id}-{ctx.guild.name}.json', 'r') as f:
        config = json.load(f)

    async for message in ctx.channel.history(limit=1, oldest_first=False):
        await message.add_reaction(emoji=emoji)

        message_id = str(message.id)
        channel_id = str(ctx.channel.id)

        if channel_id not in config['config']['data']['roles']:
            config['config']['data']['roles'][channel_id] = {}

        if message_id not in config['config']['data']['roles'][channel_id]:
            config['config']['data']['roles'][channel_id][message_id] = {}

        if emoji not in config['config']['data']['roles'][channel_id][message_id]:
            config['config']['data']['roles'][channel_id][message_id][emoji] = role.id, one_reaction

            emb = discord.Embed(
                title=f'({emoji} - {role}) –¥–æ–±–∞–≤–ª–µ–Ω–æ',
                colour=10181046)
            message = await ctx.send(embed=emb)

        else:
            emb = discord.Embed(
                title=f'({emoji} - {role}) —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ',
                colour=10181046)
            await ctx.send(embed=emb, hidden=True)

        with open(f'server data/{ctx.guild.id}-{ctx.guild.name}.json', 'w') as f:
            json.dump(config, f, indent=4, ensure_ascii=False)

        await asyncio.sleep(1)
        await message.delete()

if __name__ == '__main__':
    bot.run(tocen)